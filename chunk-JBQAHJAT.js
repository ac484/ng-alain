import{$,$a,A,Aa,B,Ba,C,Ca,D,Da,E,Ea,F,Fa,G,Ga,H,Ha,I,Ia,J,Ja,K,Ka,L,La,M,Ma,N,Na,O,Oa,P,Pa,Q,Qa,R,Ra,S,Sa,T,Ta,U,Ua,V,Va,W,Wa,X,Xa,Y,Ya,Z,Za,_,_a,a,aa,ab,b,ba,bb,c,ca,cb,d,da,db,e,ea,eb,f,fa,fb,g,ga,gb,h,ha,hb,i,ia,ib,j,ja,jb,k,ka,kb,l,la,lb,m,ma,mb,n,na,nb,o,oa,ob,p,pa,pb,q,qa,qb,r,ra,rb,s,sa,sb,t,ta,tb,u,ua,ub,v,va,vb,w,wa,wb,x,xa,xb,y,ya,yb,z,za,zb}from"./chunk-I2RAQBWN.js";import"./chunk-AF73PXIT.js";import"./chunk-LRIKAP6Q.js";import"./chunk-YIOOD6AO.js";import"./chunk-7CV657US.js";import"./chunk-ARNVYSUA.js";import"./chunk-57BLH6QZ.js";export{I as AbstractUserDataWriter,u as AggregateField,v as AggregateQuerySnapshot,w as Bytes,s as CACHE_SIZE_UNLIMITED,q as CollectionReference,p as DocumentReference,M as DocumentSnapshot,x as FieldPath,y as FieldValue,ga as Firestore,c as FirestoreError,ha as FirestoreInstances,ja as FirestoreModule,z as GeoPoint,r as LoadBundleTask,ca as PersistentCacheIndexManager,o as Query,D as QueryCompositeFilterConstraint,B as QueryConstraint,O as QueryDocumentSnapshot,H as QueryEndAtConstraint,C as QueryFieldFilterConstraint,F as QueryLimitConstraint,E as QueryOrderByConstraint,P as QuerySnapshot,G as QueryStartAtConstraint,L as SnapshotMetadata,k as Timestamp,_ as Transaction,A as VectorValue,Z as WriteBatch,f as _AutoId,m as _ByteString,n as _DatabaseId,h as _DocumentKey,e as _EmptyAppCheckTokenProvider,d as _EmptyAuthCredentialsProvider,g as _FieldPath,fa as _TestingHooks,j as _cast,b as _debugAssert,ea as _internalAggregationQueryToProtoRunAggregationQueryRequest,da as _internalQueryToProtoQueryTarget,l as _isBase64Available,a as _logWarn,i as _validateIsNotUsedTogether,wa as addDoc,xa as aggregateFieldEqual,ya as aggregateQuerySnapshotEqual,za as and,ba as arrayRemove,aa as arrayUnion,la as auditTrail,J as average,Aa as clearIndexedDbPersistence,Ba as collection,na as collectionChanges,oa as collectionCount,pa as collectionCountSnap,qa as collectionData,Ca as collectionGroup,ma as collectionSnapshots,Da as connectFirestoreEmulator,K as count,Ea as deleteAllPersistentCacheIndexes,Fa as deleteDoc,Ga as deleteField,Ha as disableNetwork,Ia as disablePersistentCacheIndexAutoCreation,Ja as doc,sa as docData,ra as docSnapshots,Ka as documentId,N as documentSnapshotFromJSON,La as enableIndexedDbPersistence,Ma as enableMultiTabIndexedDbPersistence,Na as enableNetwork,Oa as enablePersistentCacheIndexAutoCreation,Pa as endAt,Qa as endBefore,t as ensureFirestoreConfigured,S as executeWrite,ia as firestoreInstance$,ta as fromRef,Ra as getAggregateFromServer,Sa as getCountFromServer,Ta as getDoc,Ua as getDocFromCache,Va as getDocFromServer,Wa as getDocs,Xa as getDocsFromCache,Ya as getDocsFromServer,Za as getFirestore,_a as getPersistentCacheIndexManager,$a as increment,ab as initializeFirestore,bb as limit,cb as limitToLast,db as loadBundle,T as memoryEagerGarbageCollector,V as memoryLocalCache,U as memoryLruGarbageCollector,eb as namedQuery,fb as onSnapshot,R as onSnapshotResume,gb as onSnapshotsInSync,hb as or,ib as orderBy,W as persistentLocalCache,Y as persistentMultipleTabManager,X as persistentSingleTabManager,ka as provideFirestore,jb as query,kb as queryEqual,Q as querySnapshotFromJSON,lb as refEqual,mb as runTransaction,$ as serverTimestamp,nb as setDoc,ob as setIndexConfiguration,pb as setLogLevel,ua as snapToData,qb as snapshotEqual,va as sortedChanges,rb as startAfter,sb as startAt,tb as sum,ub as terminate,vb as updateDoc,wb as vector,xb as waitForPendingWrites,yb as where,zb as writeBatch};
