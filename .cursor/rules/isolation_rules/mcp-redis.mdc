---
alwaysApply: false
---
## 二、查詢流程

```mermaid
flowchart TD
    QStart[查詢請求] --> QVec[Redis 向量搜尋]
    QVec -- 高相關 --> QUse[直接回傳]
    QVec -- 低相關/未命中 --> QFlow[查 Memory-Flow]
    QFlow -- 命中 --> QAcc[積累到 Redis]
    QFlow -- 未命中 --> QBank[查 Memory-Bank]
    QBank -- 命中 --> QAcc2[積累到 Redis]
    QBank -- 未命中 --> QCtx7[查 Context7]
    QCtx7 -- 命中 --> QAcc3[積累到 Redis]
    QCtx7 -- 未命中 --> QNotFound[回傳未找到]
    QAcc --> QUse
    QAcc2 --> QUse
    QAcc3 --> QUse
```

- 查詢時，先用向量搜尋（vector_search_hash），相關度高才直接回傳。
- 若未命中或相關度低，依序 fallback 至 Memory-Flow、Memory-Bank、Context7。
- 查到高質量新知識時，積累回 Redis 並存向量。

---

## 三、積累/寫入規則

- 僅高質量知識（如人工審核、質量分數高、查詢高頻）才寫入 Redis。
- 寫入時自動生成向量 embedding，並存入 `knowledge_vectors`。
- 若已存在同 id，則進行「覆蓋」或「版本升級」。

---

## 四、更新/覆蓋規則

- Memory-Bank/Flow 有新決策時，主動同步到 Redis。
- 若知識內容有變更，則覆蓋原有資料（保留 version 與 updated_at）。
- 新知識明顯優於舊資料時，直接覆蓋（依質量分數、人工審核）。

---

## 五、刪除/淘汰規則

- 定期（或根據事件）清理過期、低質量、重複資料。
- 支援 TTL（自動過期）、人工標記刪除、查詢頻率低自動淘汰。
- 刪除時同步移除向量索引。

---

## 六、AI 決策邏輯

| 行為   | 觸發條件                                                                 |
|--------|--------------------------------------------------------------------------|
| 查詢   | 任何知識請求，先查 Redis 向量庫                                          |
| 寫入   | Memory-Flow/Bank/Context7 查到高質量新知識，或查詢高頻自動積累           |
| 更新   | Memory-Flow/Bank 有新決策、知識內容有變更                                |
| 刪除   | 資料過期、低質量、重複、查詢頻率低、人工標記                             |
| 覆蓋   | 新知識明顯優於舊資料（質量分數高、內容更完整、人工審核）                 |

---

## 七、維護與審查

- 每週自動統計 Redis 命中率、資料質量分布、查詢頻率。
- 低質量/過期/冷門資料自動淘汰。
- Memory-Bank/Flow 重大更新時，主動同步 Redis。
- 定期人工審查高頻知識，確保知識庫質量。

---

## 八、實作建議

- 查詢、積累、淘汰、覆蓋流程自動化，減少人工干預。
- 所有寫入/覆蓋/刪除操作有日誌可追溯。
- Redis 只做快取與高頻知識庫，長期決策仍以 Memory-Bank/Flow 為主。

---

> 本規範為 MCP Redis 向量知識庫最佳實踐，請團隊嚴格遵循，並根據實際需求持續優化。


[[calls]]
match = """redis|cache|store|save|get|retrieve|set|hash|list|stream|json|pub|sub|zadd|sadd|lpush|rpush|hset|hget|vector|search|memory|session|queue"""
tool = "redis-mcp"
