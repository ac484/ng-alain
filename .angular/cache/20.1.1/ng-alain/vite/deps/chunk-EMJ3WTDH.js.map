{
  "version": 3,
  "sources": ["../../../../../../node_modules/isutf8/dist/index.esm.js", "../../../../../../node_modules/@delon/abc/fesm2022/xlsx.mjs"],
  "sourcesContent": ["/*\n    https://tools.ietf.org/html/rfc3629\n\n    UTF8-char = UTF8-1 / UTF8-2 / UTF8-3 / UTF8-4\n\n    UTF8-1    = %x00-7F\n\n    UTF8-2    = %xC2-DF UTF8-tail\n\n    UTF8-3    = %xE0 %xA0-BF UTF8-tail\n                %xE1-EC 2( UTF8-tail )\n                %xED %x80-9F UTF8-tail\n                %xEE-EF 2( UTF8-tail )\n\n    UTF8-4    = %xF0 %x90-BF 2( UTF8-tail )\n                %xF1-F3 3( UTF8-tail )\n                %xF4 %x80-8F 2( UTF8-tail )\n\n    UTF8-tail = %x80-BF\n*/\n/**\n * Check if a Node.js Buffer or Uint8Array is UTF-8.\n */\nfunction isUtf8(buf) {\n    if (!buf) {\n        return false;\n    }\n    var i = 0;\n    var len = buf.length;\n    while (i < len) {\n        // UTF8-1 = %x00-7F\n        if (buf[i] <= 0x7F) {\n            i++;\n            continue;\n        }\n        // UTF8-2 = %xC2-DF UTF8-tail\n        if (buf[i] >= 0xC2 && buf[i] <= 0xDF) {\n            // if(buf[i + 1] >= 0x80 && buf[i + 1] <= 0xBF) {\n            if (buf[i + 1] >> 6 === 2) {\n                i += 2;\n                continue;\n            }\n            else {\n                return false;\n            }\n        }\n        // UTF8-3 = %xE0 %xA0-BF UTF8-tail\n        // UTF8-3 = %xED %x80-9F UTF8-tail\n        if (((buf[i] === 0xE0 && buf[i + 1] >= 0xA0 && buf[i + 1] <= 0xBF) ||\n            (buf[i] === 0xED && buf[i + 1] >= 0x80 && buf[i + 1] <= 0x9F)) && buf[i + 2] >> 6 === 2) {\n            i += 3;\n            continue;\n        }\n        // UTF8-3 = %xE1-EC 2( UTF8-tail )\n        // UTF8-3 = %xEE-EF 2( UTF8-tail )\n        if (((buf[i] >= 0xE1 && buf[i] <= 0xEC) ||\n            (buf[i] >= 0xEE && buf[i] <= 0xEF)) &&\n            buf[i + 1] >> 6 === 2 &&\n            buf[i + 2] >> 6 === 2) {\n            i += 3;\n            continue;\n        }\n        // UTF8-4 = %xF0 %x90-BF 2( UTF8-tail )\n        //          %xF1-F3 3( UTF8-tail )\n        //          %xF4 %x80-8F 2( UTF8-tail )\n        if (((buf[i] === 0xF0 && buf[i + 1] >= 0x90 && buf[i + 1] <= 0xBF) ||\n            (buf[i] >= 0xF1 && buf[i] <= 0xF3 && buf[i + 1] >> 6 === 2) ||\n            (buf[i] === 0xF4 && buf[i + 1] >= 0x80 && buf[i + 1] <= 0x8F)) &&\n            buf[i + 2] >> 6 === 2 &&\n            buf[i + 3] >> 6 === 2) {\n            i += 4;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n\nexport { isUtf8 as default };\n", "import { __decorate } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable, Input, Directive, NgModule } from '@angular/core';\nimport isUtf8 from 'isutf8';\nimport { AlainConfigService } from '@delon/util/config';\nimport { ZoneOutside } from '@delon/util/decorator';\nimport { LazyService } from '@delon/util/other';\nclass XlsxService {\n  http = inject(HttpClient);\n  lazy = inject(LazyService);\n  ngZone = inject(NgZone);\n  cogSrv = inject(AlainConfigService);\n  cog;\n  constructor() {\n    this.cog = this.cogSrv.merge('xlsx', {\n      url: 'https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js',\n      modules: [`https://cdn.jsdelivr.net/npm/xlsx/dist/cpexcel.js`]\n    });\n  }\n  init() {\n    return typeof XLSX !== 'undefined' ? Promise.resolve([]) : this.lazy.load([this.cog.url].concat(this.cog.modules));\n  }\n  read(data) {\n    const {\n      read,\n      utils: {\n        sheet_to_json\n      }\n    } = XLSX;\n    const ret = {};\n    const buf = new Uint8Array(data);\n    let type = 'array';\n    if (!isUtf8(buf)) {\n      try {\n        data = cptable.utils.decode(936, buf);\n        type = 'string';\n      } catch {}\n    }\n    const wb = read(data, {\n      type\n    });\n    wb.SheetNames.forEach(name => {\n      const sheet = wb.Sheets[name];\n      ret[name] = sheet_to_json(sheet, {\n        header: 1\n      });\n    });\n    return ret;\n  }\n  /**\n   * 导入Excel并输出JSON，支持 `<input type=\"file\">`、URL 形式\n   */\n  import(fileOrUrl) {\n    return new Promise((resolve, reject) => {\n      const r = data => this.ngZone.run(() => resolve(this.read(data)));\n      this.init().then(() => {\n        // from url\n        if (typeof fileOrUrl === 'string') {\n          this.http.request('GET', fileOrUrl, {\n            responseType: 'arraybuffer'\n          }).subscribe({\n            next: res => r(new Uint8Array(res)),\n            error: err => reject(err)\n          });\n          return;\n        }\n        // from file\n        const reader = new FileReader();\n        reader.onload = e => r(e.target.result);\n        reader.onerror = e => reject(e);\n        reader.readAsArrayBuffer(fileOrUrl);\n      }).catch(() => reject(`Unable to load xlsx.js`));\n    });\n  }\n  async export(options) {\n    return new Promise((resolve, reject) => {\n      this.init().then(() => {\n        options = {\n          format: 'xlsx',\n          ...options\n        };\n        const {\n          writeFile,\n          utils: {\n            book_new,\n            aoa_to_sheet,\n            book_append_sheet\n          }\n        } = XLSX;\n        const wb = book_new();\n        if (Array.isArray(options.sheets)) {\n          options.sheets.forEach((value, index) => {\n            const ws = aoa_to_sheet(value.data);\n            book_append_sheet(wb, ws, value.name || `Sheet${index + 1}`);\n          });\n        } else {\n          wb.SheetNames = Object.keys(options.sheets);\n          wb.Sheets = options.sheets;\n        }\n        if (options.callback) options.callback(wb);\n        const filename = options.filename || `export.${options.format}`;\n        writeFile(wb, filename, {\n          bookType: options.format,\n          bookSST: false,\n          type: 'array',\n          ...options.opts\n        });\n        resolve({\n          filename,\n          wb\n        });\n      }).catch(err => reject(err));\n    });\n  }\n  /**\n   * 数据转符号名\n   * - `1` => `A`\n   * - `27` => `AA`\n   * - `703` => `AAA`\n   */\n  numberToSchema(val) {\n    const startCode = 'A'.charCodeAt(0);\n    let res = '';\n    do {\n      --val;\n      res = String.fromCharCode(startCode + val % 26) + res;\n      val = val / 26 >> 0;\n    } while (val > 0);\n    return res;\n  }\n  static ɵfac = function XlsxService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || XlsxService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: XlsxService,\n    factory: XlsxService.ɵfac,\n    providedIn: 'root'\n  });\n}\n__decorate([ZoneOutside()], XlsxService.prototype, \"read\", null);\n__decorate([ZoneOutside()], XlsxService.prototype, \"export\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XlsxService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], {\n    read: [],\n    export: []\n  });\n})();\nclass XlsxDirective {\n  srv = inject(XlsxService);\n  data;\n  _click() {\n    this.srv.export(this.data);\n  }\n  static ɵfac = function XlsxDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || XlsxDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: XlsxDirective,\n    selectors: [[\"\", \"xlsx\", \"\"]],\n    hostBindings: function XlsxDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function XlsxDirective_click_HostBindingHandler() {\n          return ctx._click();\n        });\n      }\n    },\n    inputs: {\n      data: [0, \"xlsx\", \"data\"]\n    },\n    exportAs: [\"xlsx\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XlsxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[xlsx]',\n      exportAs: 'xlsx',\n      host: {\n        '(click)': '_click()'\n      }\n    }]\n  }], null, {\n    data: [{\n      type: Input,\n      args: ['xlsx']\n    }]\n  });\n})();\nconst COMPONENTS = [XlsxDirective];\nclass XlsxModule {\n  static ɵfac = function XlsxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || XlsxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: XlsxModule,\n    imports: [XlsxDirective],\n    exports: [XlsxDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XlsxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [COMPONENTS],\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { XlsxDirective, XlsxModule, XlsxService };\n"],
  "mappings": "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",
  "names": []
}
