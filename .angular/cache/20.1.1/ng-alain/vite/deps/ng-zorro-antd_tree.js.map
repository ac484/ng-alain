{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-highlight.mjs", "../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-tree.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { encodeEntities } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzHighlightPipe {\n  UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];\n  transform(value, highlightValue, flags, klass) {\n    if (!highlightValue) {\n      return value;\n    }\n    // Escapes regex keyword to interpret these characters literally\n    const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$&'), flags);\n    const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n    return encodeEntities(wrapValue).replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>').replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n  }\n  static ɵfac = function NzHighlightPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzHighlightPipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"nzHighlight\",\n    type: NzHighlightPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzHighlightPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzHighlight'\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * @deprecated Will be removed in v21, use `NzHighlightPipe` directly instead.\n */\nclass NzHighlightModule {\n  static ɵfac = function NzHighlightModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzHighlightModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzHighlightModule,\n    imports: [NzHighlightPipe],\n    exports: [NzHighlightPipe]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzHighlightModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzHighlightPipe],\n      exports: [NzHighlightPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzHighlightModule, NzHighlightPipe };\n", "import * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, numberAttribute, Input, ChangeDetectionStrategy, Component, booleanAttribute, NgZone, Renderer2, ElementRef, DestroyRef, EventEmitter, Output, Injectable, forwardRef, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { NzHighlightPipe } from 'ng-zorro-antd/core/highlight';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NzTreeBaseService, NzTreeHigherOrderServiceToken, NzTreeBase, flattenTreeData } from 'ng-zorro-antd/core/tree';\nfunction NzTreeIndentComponent_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵdomElement(0, \"span\");\n  }\n  if (rf & 2) {\n    const ɵ$index_1_r1 = ctx.$index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-tree-indent-unit\", !ctx_r1.nzSelectMode)(\"ant-select-tree-indent-unit\", ctx_r1.nzSelectMode)(\"ant-select-tree-indent-unit-start\", ctx_r1.nzSelectMode && ctx_r1.nzIsStart[ɵ$index_1_r1])(\"ant-tree-indent-unit-start\", !ctx_r1.nzSelectMode && ctx_r1.nzIsStart[ɵ$index_1_r1])(\"ant-select-tree-indent-unit-end\", ctx_r1.nzSelectMode && ctx_r1.nzIsEnd[ɵ$index_1_r1])(\"ant-tree-indent-unit-end\", !ctx_r1.nzSelectMode && ctx_r1.nzIsEnd[ɵ$index_1_r1]);\n  }\n}\nconst _c0 = [\"builtin\", \"\"];\nconst _c1 = (a0, a1) => ({\n  $implicit: a0,\n  origin: a1\n});\nfunction NzTreeNodeSwitcherComponent_Conditional_0_Conditional_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"nz-icon\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"ant-select-tree-switcher-icon\", ctx_r0.nzSelectMode)(\"ant-tree-switcher-icon\", !ctx_r0.nzSelectMode);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTreeNodeSwitcherComponent_Conditional_0_Conditional_0_ng_container_0_Template, 2, 4, \"ng-container\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzExpandedIcon)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, ctx_r0.context, ctx_r0.context.origin));\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_0_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-icon\", 0);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"nzSpin\", true);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NzTreeNodeSwitcherComponent_Conditional_0_Conditional_0_Template, 1, 5, \"ng-container\")(1, NzTreeNodeSwitcherComponent_Conditional_0_Conditional_1_Template, 1, 1, \"nz-icon\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(!ctx_r0.isLoading ? 0 : 1);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_ng_container_0_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-icon\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"nzType\", ctx_r0.isSwitcherOpen ? \"minus-square\" : \"plus-square\");\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_ng_container_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-icon\", 4);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵconditionalCreate(1, NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_ng_container_0_Conditional_1_Template, 1, 1, \"nz-icon\", 3)(2, NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_ng_container_0_Conditional_2_Template, 1, 0, \"nz-icon\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.isShowLineIcon ? 1 : 2);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_ng_container_0_Template, 3, 1, \"ng-container\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzExpandedIcon)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, ctx_r0.context, ctx_r0.context.origin));\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-icon\", 0);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"nzSpin\", true);\n  }\n}\nfunction NzTreeNodeSwitcherComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NzTreeNodeSwitcherComponent_Conditional_1_Conditional_0_Template, 1, 5, \"ng-container\")(1, NzTreeNodeSwitcherComponent_Conditional_1_Conditional_1_Template, 1, 1, \"nz-icon\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(!ctx_r0.isLoading ? 0 : 1);\n  }\n}\nfunction NzTreeNodeTitleComponent_ng_template_0_Template(rf, ctx) {}\nfunction NzTreeNodeTitleComponent_Conditional_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\");\n    i0.ɵɵelement(2, \"nz-icon\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"ant-tree-icon__open\", ctx_r0.isSwitcherOpen)(\"ant-tree-icon__close\", ctx_r0.isSwitcherClose)(\"ant-tree-icon_loading\", ctx_r0.isLoading)(\"ant-select-tree-iconEle\", ctx_r0.selectMode)(\"ant-tree-iconEle\", !ctx_r0.selectMode);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"ant-select-tree-iconEle\", ctx_r0.selectMode)(\"ant-select-tree-icon__customize\", ctx_r0.selectMode)(\"ant-tree-iconEle\", !ctx_r0.selectMode)(\"ant-tree-icon__customize\", !ctx_r0.selectMode);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.icon);\n  }\n}\nfunction NzTreeNodeTitleComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, NzTreeNodeTitleComponent_Conditional_1_Conditional_0_Template, 3, 19, \"span\", 2);\n    i0.ɵɵelement(1, \"span\", 3);\n    i0.ɵɵpipe(2, \"nzHighlight\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.icon && ctx_r0.showIcon ? 0 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind4(2, 2, ctx_r0.title, ctx_r0.matchedValue, \"i\", \"font-highlight\"), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzTreeNodeTitleComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-tree-drop-indicator\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dropPosition\", ctx_r0.dragPosition)(\"level\", ctx_r0.context.level);\n  }\n}\nfunction NzTreeNodeBuiltinComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-tree-node-switcher\", 4);\n    i0.ɵɵlistener(\"click\", function NzTreeNodeBuiltinComponent_Conditional_1_Template_nz_tree_node_switcher_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clickExpand($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzShowExpand\", ctx_r1.nzShowExpand)(\"nzShowLine\", ctx_r1.nzShowLine)(\"nzExpandedIcon\", ctx_r1.nzExpandedIcon)(\"nzSelectMode\", ctx_r1.nzSelectMode)(\"context\", ctx_r1.nzTreeNode)(\"isLeaf\", ctx_r1.isLeaf)(\"isExpanded\", ctx_r1.isExpanded)(\"isLoading\", ctx_r1.isLoading);\n  }\n}\nfunction NzTreeNodeBuiltinComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-tree-node-checkbox\", 5);\n    i0.ɵɵlistener(\"click\", function NzTreeNodeBuiltinComponent_Conditional_2_Template_nz_tree_node_checkbox_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clickCheckbox($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzSelectMode\", ctx_r1.nzSelectMode)(\"isChecked\", ctx_r1.isChecked)(\"isHalfChecked\", ctx_r1.isHalfChecked)(\"isDisabled\", ctx_r1.isDisabled)(\"isDisableCheckbox\", ctx_r1.isDisableCheckbox);\n  }\n}\nconst _c2 = [\"nzTreeTemplate\"];\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction NzTreeComponent_Conditional_6_ng_container_1_ng_template_1_Template(rf, ctx) {}\nfunction NzTreeComponent_Conditional_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeComponent_Conditional_6_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const node_r1 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n    const nodeTemplate_r2 = i0.ɵɵreference(9);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", nodeTemplate_r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, node_r1));\n  }\n}\nfunction NzTreeComponent_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 7);\n    i0.ɵɵtemplate(1, NzTreeComponent_Conditional_6_ng_container_1_Template, 2, 4, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r2.nzVirtualHeight);\n    i0.ɵɵclassProp(\"ant-select-tree-list-holder-inner\", ctx_r2.nzSelectMode)(\"ant-tree-list-holder-inner\", !ctx_r2.nzSelectMode);\n    i0.ɵɵproperty(\"itemSize\", ctx_r2.nzVirtualItemSize)(\"minBufferPx\", ctx_r2.nzVirtualMinBufferPx)(\"maxBufferPx\", ctx_r2.nzVirtualMaxBufferPx);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r2.nzFlattenNodes)(\"cdkVirtualForTrackBy\", ctx_r2.trackByFlattenNode);\n  }\n}\nfunction NzTreeComponent_Conditional_7_For_2_ng_template_0_Template(rf, ctx) {}\nfunction NzTreeComponent_Conditional_7_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTreeComponent_Conditional_7_For_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n  if (rf & 2) {\n    const node_r4 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n    const nodeTemplate_r2 = i0.ɵɵreference(9);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", nodeTemplate_r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, node_r4));\n  }\n}\nfunction NzTreeComponent_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵrepeaterCreate(1, NzTreeComponent_Conditional_7_For_2_Template, 1, 4, null, 9, i0.ɵɵcomponentInstance().trackByFlattenNode, true);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-tree-list-holder-inner\", ctx_r2.nzSelectMode)(\"ant-tree-list-holder-inner\", !ctx_r2.nzSelectMode);\n    i0.ɵɵproperty(\"@.disabled\", ctx_r2.beforeInit || !!(ctx_r2.noAnimation == null ? null : ctx_r2.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx_r2.noAnimation == null ? null : ctx_r2.noAnimation.nzNoAnimation)(\"@treeCollapseMotion\", ctx_r2.nzFlattenNodes.length);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r2.nzFlattenNodes);\n  }\n}\nfunction NzTreeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-tree-node\", 11);\n    i0.ɵɵlistener(\"nzExpandChange\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzExpandChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzClick\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzDblClick\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzDblClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzContextMenu\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzContextMenu_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzCheckboxChange\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzCheckboxChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzOnDragStart\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragStart_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzOnDragEnter\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragEnter_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzOnDragOver\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragOver_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzOnDragLeave\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragLeave_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzOnDragEnd\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDragEnd_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    })(\"nzOnDrop\", function NzTreeComponent_ng_template_8_Template_nz_tree_node_nzOnDrop_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.eventTriggerChanged($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const treeNode_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", treeNode_r6.icon)(\"title\", treeNode_r6.title)(\"isLoading\", treeNode_r6.isLoading)(\"isSelected\", treeNode_r6.isSelected)(\"isDisabled\", treeNode_r6.isDisabled)(\"isMatched\", treeNode_r6.isMatched)(\"isExpanded\", treeNode_r6.isExpanded)(\"isLeaf\", treeNode_r6.isLeaf)(\"isStart\", treeNode_r6.isStart)(\"isEnd\", treeNode_r6.isEnd)(\"isChecked\", treeNode_r6.isChecked)(\"isHalfChecked\", treeNode_r6.isHalfChecked)(\"isDisableCheckbox\", treeNode_r6.isDisableCheckbox)(\"isSelectable\", treeNode_r6.isSelectable)(\"canHide\", treeNode_r6.canHide)(\"nzTreeNode\", treeNode_r6)(\"nzSelectMode\", ctx_r2.nzSelectMode)(\"nzShowLine\", ctx_r2.nzShowLine)(\"nzExpandedIcon\", ctx_r2.nzExpandedIcon)(\"nzDraggable\", ctx_r2.nzDraggable)(\"nzCheckable\", ctx_r2.nzCheckable)(\"nzShowExpand\", ctx_r2.nzShowExpand)(\"nzAsyncData\", ctx_r2.nzAsyncData)(\"nzSearchValue\", ctx_r2.nzSearchValue)(\"nzHideUnMatched\", ctx_r2.nzHideUnMatched)(\"nzBeforeDrop\", ctx_r2.nzBeforeDrop)(\"nzShowIcon\", ctx_r2.nzShowIcon)(\"nzTreeTemplate\", ctx_r2.nzTreeTemplate || ctx_r2.nzTreeTemplateChild);\n  }\n}\nexport { NzTreeNode } from 'ng-zorro-antd/core/tree';\nimport { fromEventOutsideAngular } from 'ng-zorro-antd/core/util';\nimport { __esDecorate, __runInitializers } from 'tslib';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { WithConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nclass NzTreeDropIndicatorComponent {\n  dropPosition;\n  level = 1;\n  direction = 'ltr';\n  style = {};\n  cdr = inject(ChangeDetectorRef);\n  ngOnChanges() {\n    this.renderIndicator(this.dropPosition, this.direction);\n  }\n  renderIndicator(dropPosition, direction = 'ltr') {\n    const offset = 4;\n    const startPosition = direction === 'ltr' ? 'left' : 'right';\n    const endPosition = direction === 'ltr' ? 'right' : 'left';\n    const style = {\n      [startPosition]: `${offset}px`,\n      [endPosition]: '0px'\n    };\n    switch (dropPosition) {\n      case -1:\n        style.top = `${-3}px`;\n        break;\n      case 1:\n        style.bottom = `${-3}px`;\n        break;\n      case 0:\n        // dropPosition === 0\n        style.bottom = `${-3}px`;\n        style[startPosition] = `${offset + 24}px`;\n        break;\n      default:\n        style.display = 'none';\n        break;\n    }\n    this.style = style;\n    this.cdr.markForCheck();\n  }\n  static ɵfac = function NzTreeDropIndicatorComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeDropIndicatorComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeDropIndicatorComponent,\n    selectors: [[\"nz-tree-drop-indicator\"]],\n    hostAttrs: [1, \"ant-tree-drop-indicator\"],\n    hostVars: 2,\n    hostBindings: function NzTreeDropIndicatorComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.style);\n      }\n    },\n    inputs: {\n      dropPosition: \"dropPosition\",\n      level: [2, \"level\", \"level\", numberAttribute],\n      direction: \"direction\"\n    },\n    exportAs: [\"nzTreeDropIndicator\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function NzTreeDropIndicatorComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeDropIndicatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-drop-indicator',\n      exportAs: 'nzTreeDropIndicator',\n      template: ``,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'ant-tree-drop-indicator',\n        '[style]': 'style'\n      }\n    }]\n  }], null, {\n    dropPosition: [{\n      type: Input\n    }],\n    level: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    direction: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeIndentComponent {\n  nzTreeLevel = 0;\n  nzIsStart = [];\n  nzIsEnd = [];\n  nzSelectMode = false;\n  listOfUnit = [];\n  ngOnChanges(changes) {\n    const {\n      nzTreeLevel\n    } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n  static ɵfac = function NzTreeIndentComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeIndentComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeIndentComponent,\n    selectors: [[\"nz-tree-indent\"]],\n    hostVars: 5,\n    hostBindings: function NzTreeIndentComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", true);\n        i0.ɵɵclassProp(\"ant-tree-indent\", !ctx.nzSelectMode)(\"ant-select-tree-indent\", ctx.nzSelectMode);\n      }\n    },\n    inputs: {\n      nzTreeLevel: \"nzTreeLevel\",\n      nzIsStart: \"nzIsStart\",\n      nzIsEnd: \"nzIsEnd\",\n      nzSelectMode: \"nzSelectMode\"\n    },\n    exportAs: [\"nzTreeIndent\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[3, \"ant-tree-indent-unit\", \"ant-select-tree-indent-unit\", \"ant-select-tree-indent-unit-start\", \"ant-tree-indent-unit-start\", \"ant-select-tree-indent-unit-end\", \"ant-tree-indent-unit-end\"]],\n    template: function NzTreeIndentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵrepeaterCreate(0, NzTreeIndentComponent_For_1_Template, 1, 12, \"span\", 0, i0.ɵɵrepeaterTrackByIndex);\n      }\n      if (rf & 2) {\n        i0.ɵɵrepeater(ctx.listOfUnit);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeIndentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-indent',\n      exportAs: 'nzTreeIndent',\n      template: `\n    @for (_ of listOfUnit; track i; let i = $index) {\n      <span\n        [class.ant-tree-indent-unit]=\"!nzSelectMode\"\n        [class.ant-select-tree-indent-unit]=\"nzSelectMode\"\n        [class.ant-select-tree-indent-unit-start]=\"nzSelectMode && nzIsStart[i]\"\n        [class.ant-tree-indent-unit-start]=\"!nzSelectMode && nzIsStart[i]\"\n        [class.ant-select-tree-indent-unit-end]=\"nzSelectMode && nzIsEnd[i]\"\n        [class.ant-tree-indent-unit-end]=\"!nzSelectMode && nzIsEnd[i]\"\n      ></span>\n    }\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[attr.aria-hidden]': 'true',\n        '[class.ant-tree-indent]': '!nzSelectMode',\n        '[class.ant-select-tree-indent]': 'nzSelectMode'\n      }\n    }]\n  }], null, {\n    nzTreeLevel: [{\n      type: Input\n    }],\n    nzIsStart: [{\n      type: Input\n    }],\n    nzIsEnd: [{\n      type: Input\n    }],\n    nzSelectMode: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeBuiltinCheckboxComponent {\n  nzSelectMode = false;\n  isChecked;\n  isHalfChecked;\n  isDisabled;\n  isDisableCheckbox;\n  static ɵfac = function NzTreeNodeBuiltinCheckboxComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeNodeBuiltinCheckboxComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeNodeBuiltinCheckboxComponent,\n    selectors: [[\"nz-tree-node-checkbox\", \"builtin\", \"\"]],\n    hostVars: 16,\n    hostBindings: function NzTreeNodeBuiltinCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-select-tree-checkbox\", ctx.nzSelectMode)(\"ant-select-tree-checkbox-checked\", ctx.nzSelectMode && ctx.isChecked)(\"ant-select-tree-checkbox-indeterminate\", ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-select-tree-checkbox-disabled\", ctx.nzSelectMode && (ctx.isDisabled || ctx.isDisableCheckbox))(\"ant-tree-checkbox\", !ctx.nzSelectMode)(\"ant-tree-checkbox-checked\", !ctx.nzSelectMode && ctx.isChecked)(\"ant-tree-checkbox-indeterminate\", !ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-tree-checkbox-disabled\", !ctx.nzSelectMode && (ctx.isDisabled || ctx.isDisableCheckbox));\n      }\n    },\n    inputs: {\n      nzSelectMode: \"nzSelectMode\",\n      isChecked: [2, \"isChecked\", \"isChecked\", booleanAttribute],\n      isHalfChecked: [2, \"isHalfChecked\", \"isHalfChecked\", booleanAttribute],\n      isDisabled: [2, \"isDisabled\", \"isDisabled\", booleanAttribute],\n      isDisableCheckbox: [2, \"isDisableCheckbox\", \"isDisableCheckbox\", booleanAttribute]\n    },\n    attrs: _c0,\n    decls: 1,\n    vars: 4,\n    template: function NzTreeNodeBuiltinCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵdomElement(0, \"span\");\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-tree-checkbox-inner\", !ctx.nzSelectMode)(\"ant-select-tree-checkbox-inner\", ctx.nzSelectMode);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeBuiltinCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node-checkbox[builtin]',\n      template: `\n    <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n        '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n        '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n        '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n        '[class.ant-tree-checkbox]': `!nzSelectMode`,\n        '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n        '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n        '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n      }\n    }]\n  }], null, {\n    nzSelectMode: [{\n      type: Input\n    }],\n    isChecked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isHalfChecked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isDisableCheckbox: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeSwitcherComponent {\n  nzShowExpand;\n  nzShowLine;\n  nzExpandedIcon;\n  nzSelectMode = false;\n  context;\n  isLeaf;\n  isLoading;\n  isExpanded;\n  get isShowLineIcon() {\n    return !this.isLeaf && !!this.nzShowLine;\n  }\n  get isShowSwitchIcon() {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n  get isSwitcherOpen() {\n    return !!this.isExpanded && !this.isLeaf;\n  }\n  get isSwitcherClose() {\n    return !this.isExpanded && !this.isLeaf;\n  }\n  static ɵfac = function NzTreeNodeSwitcherComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeNodeSwitcherComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeNodeSwitcherComponent,\n    selectors: [[\"nz-tree-node-switcher\"]],\n    hostVars: 16,\n    hostBindings: function NzTreeNodeSwitcherComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-select-tree-switcher\", ctx.nzSelectMode)(\"ant-select-tree-switcher-noop\", ctx.nzSelectMode && ctx.isLeaf)(\"ant-select-tree-switcher_open\", ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-select-tree-switcher_close\", ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-tree-switcher\", !ctx.nzSelectMode)(\"ant-tree-switcher-noop\", !ctx.nzSelectMode && ctx.isLeaf)(\"ant-tree-switcher_open\", !ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-tree-switcher_close\", !ctx.nzSelectMode && ctx.isSwitcherClose);\n      }\n    },\n    inputs: {\n      nzShowExpand: [2, \"nzShowExpand\", \"nzShowExpand\", booleanAttribute],\n      nzShowLine: [2, \"nzShowLine\", \"nzShowLine\", booleanAttribute],\n      nzExpandedIcon: \"nzExpandedIcon\",\n      nzSelectMode: \"nzSelectMode\",\n      context: \"context\",\n      isLeaf: [2, \"isLeaf\", \"isLeaf\", booleanAttribute],\n      isLoading: [2, \"isLoading\", \"isLoading\", booleanAttribute],\n      isExpanded: [2, \"isExpanded\", \"isExpanded\", booleanAttribute]\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"nzType\", \"loading\", 1, \"ant-tree-switcher-loading-icon\", 3, \"nzSpin\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"nzType\", \"caret-down\"], [1, \"ant-tree-switcher-line-icon\", 3, \"nzType\"], [\"nzType\", \"file\", 1, \"ant-tree-switcher-line-icon\"]],\n    template: function NzTreeNodeSwitcherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵconditionalCreate(0, NzTreeNodeSwitcherComponent_Conditional_0_Template, 2, 1);\n        i0.ɵɵconditionalCreate(1, NzTreeNodeSwitcherComponent_Conditional_1_Template, 2, 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.isShowSwitchIcon ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.nzShowLine ? 1 : -1);\n      }\n    },\n    dependencies: [NzIconModule, i1.NzIconDirective, NzOutletModule, i2.NzStringTemplateOutletDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeSwitcherComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node-switcher',\n      template: `\n    @if (isShowSwitchIcon) {\n      @if (!isLoading) {\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          />\n        </ng-container>\n      } @else {\n        <nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\" />\n      }\n    }\n    @if (nzShowLine) {\n      @if (!isLoading) {\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          @if (isShowLineIcon) {\n            <nz-icon [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\" class=\"ant-tree-switcher-line-icon\" />\n          } @else {\n            <nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\" />\n          }\n        </ng-container>\n      } @else {\n        <nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\" />\n      }\n    }\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.ant-select-tree-switcher]': 'nzSelectMode',\n        '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n        '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n        '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n        '[class.ant-tree-switcher]': '!nzSelectMode',\n        '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n        '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n        '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n      },\n      imports: [NzIconModule, NzOutletModule]\n    }]\n  }], null, {\n    nzShowExpand: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzShowLine: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzSelectMode: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    isLeaf: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isLoading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isExpanded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeTitleComponent {\n  cdr = inject(ChangeDetectorRef);\n  searchValue;\n  treeTemplate = null;\n  draggable;\n  showIcon;\n  selectMode = false;\n  context;\n  icon;\n  title;\n  isLoading;\n  isSelected;\n  isDisabled;\n  isMatched;\n  isExpanded;\n  isLeaf;\n  // Drag indicator\n  showIndicator = true;\n  dragPosition;\n  get canDraggable() {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n  get matchedValue() {\n    return this.isMatched ? this.searchValue : '';\n  }\n  get isSwitcherOpen() {\n    return this.isExpanded && !this.isLeaf;\n  }\n  get isSwitcherClose() {\n    return !this.isExpanded && !this.isLeaf;\n  }\n  ngOnChanges(changes) {\n    const {\n      showIndicator,\n      dragPosition\n    } = changes;\n    if (showIndicator || dragPosition) {\n      this.cdr.markForCheck();\n    }\n  }\n  static ɵfac = function NzTreeNodeTitleComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeNodeTitleComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeNodeTitleComponent,\n    selectors: [[\"nz-tree-node-title\"]],\n    hostVars: 21,\n    hostBindings: function NzTreeNodeTitleComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"title\", ctx.title)(\"draggable\", ctx.canDraggable)(\"aria-grabbed\", ctx.canDraggable);\n        i0.ɵɵclassProp(\"draggable\", ctx.canDraggable)(\"ant-select-tree-node-content-wrapper\", ctx.selectMode)(\"ant-select-tree-node-content-wrapper-open\", ctx.selectMode && ctx.isSwitcherOpen)(\"ant-select-tree-node-content-wrapper-close\", ctx.selectMode && ctx.isSwitcherClose)(\"ant-select-tree-node-selected\", ctx.selectMode && ctx.isSelected)(\"ant-tree-node-content-wrapper\", !ctx.selectMode)(\"ant-tree-node-content-wrapper-open\", !ctx.selectMode && ctx.isSwitcherOpen)(\"ant-tree-node-content-wrapper-close\", !ctx.selectMode && ctx.isSwitcherClose)(\"ant-tree-node-selected\", !ctx.selectMode && ctx.isSelected);\n      }\n    },\n    inputs: {\n      searchValue: \"searchValue\",\n      treeTemplate: \"treeTemplate\",\n      draggable: [2, \"draggable\", \"draggable\", booleanAttribute],\n      showIcon: [2, \"showIcon\", \"showIcon\", booleanAttribute],\n      selectMode: \"selectMode\",\n      context: \"context\",\n      icon: \"icon\",\n      title: \"title\",\n      isLoading: [2, \"isLoading\", \"isLoading\", booleanAttribute],\n      isSelected: [2, \"isSelected\", \"isSelected\", booleanAttribute],\n      isDisabled: [2, \"isDisabled\", \"isDisabled\", booleanAttribute],\n      isMatched: [2, \"isMatched\", \"isMatched\", booleanAttribute],\n      isExpanded: [2, \"isExpanded\", \"isExpanded\", booleanAttribute],\n      isLeaf: [2, \"isLeaf\", \"isLeaf\", booleanAttribute],\n      showIndicator: \"showIndicator\",\n      dragPosition: \"dragPosition\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 7,\n    consts: [[3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"dropPosition\", \"level\"], [3, \"ant-tree-icon__open\", \"ant-tree-icon__close\", \"ant-tree-icon_loading\", \"ant-select-tree-iconEle\", \"ant-tree-iconEle\"], [1, \"ant-tree-title\", 3, \"innerHTML\"], [3, \"nzType\"]],\n    template: function NzTreeNodeTitleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NzTreeNodeTitleComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        i0.ɵɵconditionalCreate(1, NzTreeNodeTitleComponent_Conditional_1_Template, 3, 7);\n        i0.ɵɵconditionalCreate(2, NzTreeNodeTitleComponent_Conditional_2_Template, 1, 2, \"nz-tree-drop-indicator\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.treeTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c1, ctx.context, ctx.context.origin));\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx.treeTemplate ? 1 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.showIndicator ? 2 : -1);\n      }\n    },\n    dependencies: [NgTemplateOutlet, NzIconModule, i1.NzIconDirective, NzTreeDropIndicatorComponent, NzHighlightPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node-title',\n      template: `\n    <ng-template\n      [ngTemplateOutlet]=\"treeTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"\n    ></ng-template>\n    @if (!treeTemplate) {\n      @if (icon && showIcon) {\n        <span\n          [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n          [class.ant-tree-icon__close]=\"isSwitcherClose\"\n          [class.ant-tree-icon_loading]=\"isLoading\"\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n        >\n          <span\n            [class.ant-select-tree-iconEle]=\"selectMode\"\n            [class.ant-select-tree-icon__customize]=\"selectMode\"\n            [class.ant-tree-iconEle]=\"!selectMode\"\n            [class.ant-tree-icon__customize]=\"!selectMode\"\n          >\n            <nz-icon [nzType]=\"icon\" />\n          </span>\n        </span>\n      }\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue : 'i' : 'font-highlight'\"></span>\n    }\n    @if (showIndicator) {\n      <nz-tree-drop-indicator [dropPosition]=\"dragPosition\" [level]=\"context.level\"></nz-tree-drop-indicator>\n    }\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[attr.title]': 'title',\n        '[attr.draggable]': 'canDraggable',\n        '[attr.aria-grabbed]': 'canDraggable',\n        '[class.draggable]': 'canDraggable',\n        '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n        '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n        '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n        '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n        '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n        '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n        '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n        '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n      },\n      imports: [NgTemplateOutlet, NzIconModule, NzHighlightPipe, NzTreeDropIndicatorComponent]\n    }]\n  }], null, {\n    searchValue: [{\n      type: Input\n    }],\n    treeTemplate: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectMode: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isSelected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isMatched: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isExpanded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isLeaf: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showIndicator: [{\n      type: Input\n    }],\n    dragPosition: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeBuiltinComponent {\n  noAnimation = inject(NzNoAnimationDirective, {\n    host: true,\n    optional: true\n  });\n  nzTreeService = inject(NzTreeBaseService);\n  ngZone = inject(NgZone);\n  renderer = inject(Renderer2);\n  el = inject(ElementRef).nativeElement;\n  cdr = inject(ChangeDetectorRef);\n  destroyRef = inject(DestroyRef);\n  icon = '';\n  title = '';\n  isLoading = false;\n  isSelected = false;\n  isDisabled = false;\n  isMatched = false;\n  isExpanded;\n  isLeaf;\n  isChecked;\n  isHalfChecked;\n  isDisableCheckbox;\n  isSelectable;\n  canHide;\n  isStart = [];\n  isEnd = [];\n  nzTreeNode;\n  nzShowLine;\n  nzShowExpand;\n  nzCheckable;\n  nzAsyncData;\n  nzHideUnMatched = false;\n  nzNoAnimation = false;\n  nzSelectMode = false;\n  nzShowIcon = false;\n  nzExpandedIcon;\n  nzTreeTemplate = null;\n  nzBeforeDrop;\n  nzSearchValue = '';\n  nzDraggable = false;\n  nzClick = new EventEmitter();\n  nzDblClick = new EventEmitter();\n  nzContextMenu = new EventEmitter();\n  nzCheckboxChange = new EventEmitter();\n  nzExpandChange = new EventEmitter();\n  nzOnDragStart = new EventEmitter();\n  nzOnDragEnter = new EventEmitter();\n  nzOnDragOver = new EventEmitter();\n  nzOnDragLeave = new EventEmitter();\n  nzOnDrop = new EventEmitter();\n  nzOnDragEnd = new EventEmitter();\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass = {\n    0: 'drag-over',\n    1: 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n  draggingKey = null;\n  showIndicator = false;\n  /**\n   * default set\n   */\n  get displayStyle() {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n  }\n  get isSwitcherOpen() {\n    return this.isExpanded && !this.isLeaf;\n  }\n  get isSwitcherClose() {\n    return !this.isExpanded && !this.isLeaf;\n  }\n  /**\n   * collapse node\n   *\n   * @param event\n   */\n  clickExpand(event) {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n  clickSelect(event) {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n  dblClick(event) {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n  contextMenu(event) {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n  /**\n   * check node\n   *\n   * @param event\n   */\n  clickCheckbox(event) {\n    event.preventDefault();\n    // return if the node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckboxChange.emit(eventNext);\n  }\n  clearDragClass() {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.el, e);\n    });\n  }\n  /**\n   * drag event\n   *\n   * @param e\n   */\n  handleDragStart(e) {\n    try {\n      // i.e., throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', this.nzTreeNode.key);\n    } catch {\n      // noop\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    this.draggingKey = this.nzTreeNode.key;\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n  handleDragEnter(e) {\n    e.preventDefault();\n    // reset position\n    this.showIndicator = this.nzTreeNode.key !== this.nzTreeService.getSelectedNode()?.key;\n    this.renderIndicator(2);\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n  handleDragOver(e) {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.renderIndicator(dropPosition);\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.el, this.dragPosClass[this.dragPos]);\n        this.renderer.addClass(this.el, 'drop-target');\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.renderIndicator(2);\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n  handleDragDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.ngZone.run(() => {\n      this.showIndicator = false;\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || node && node.key === this.nzTreeNode.key || this.dragPos === 0 && this.isLeaf) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode(),\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe(canDrop => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n  handleDragEnd(e) {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      if (!this.nzBeforeDrop) {\n        // clear dragging state\n        this.draggingKey = null;\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      } else {\n        // clear dragging state\n        this.draggingKey = null;\n        this.markForCheck();\n      }\n    });\n  }\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent() {\n    if (this.nzDraggable) {\n      this.destroy$ = new Subject();\n      fromEventOutsideAngular(this.el, 'dragstart').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragStart(e));\n      fromEventOutsideAngular(this.el, 'dragenter').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragEnter(e));\n      fromEventOutsideAngular(this.el, 'dragover').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragOver(e));\n      fromEventOutsideAngular(this.el, 'dragleave').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragLeave(e));\n      fromEventOutsideAngular(this.el, 'drop').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragDrop(e));\n      fromEventOutsideAngular(this.el, 'dragend').pipe(takeUntil(this.destroy$)).subscribe(e => this.handleDragEnd(e));\n    } else {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }\n  markForCheck() {\n    this.cdr.markForCheck();\n  }\n  constructor() {\n    this.destroyRef.onDestroy(() => {\n      this.destroy$.next();\n      this.destroy$.complete();\n    });\n  }\n  ngOnInit() {\n    this.nzTreeNode.component = this;\n    fromEventOutsideAngular(this.el, 'mousedown').pipe(takeUntilDestroyed(this.destroyRef)).subscribe(event => {\n      if (this.nzSelectMode) {\n        event.preventDefault();\n      }\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      nzDraggable\n    } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n  renderIndicator(dropPosition) {\n    this.ngZone.run(() => {\n      this.showIndicator = dropPosition !== 2;\n      if (this.nzTreeNode.key === this.nzTreeService.getSelectedNode()?.key || dropPosition === 0 && this.isLeaf) {\n        return;\n      }\n      this.dragPos = dropPosition;\n      this.cdr.markForCheck();\n    });\n  }\n  static ɵfac = function NzTreeNodeBuiltinComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeNodeBuiltinComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeNodeBuiltinComponent,\n    selectors: [[\"nz-tree-node\", \"builtin\", \"\"]],\n    hostVars: 36,\n    hostBindings: function NzTreeNodeBuiltinComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n        i0.ɵɵclassProp(\"ant-select-tree-treenode\", ctx.nzSelectMode)(\"ant-select-tree-treenode-disabled\", ctx.nzSelectMode && ctx.isDisabled)(\"ant-select-tree-treenode-switcher-open\", ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-select-tree-treenode-switcher-close\", ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-select-tree-treenode-checkbox-checked\", ctx.nzSelectMode && ctx.isChecked)(\"ant-select-tree-treenode-checkbox-indeterminate\", ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-select-tree-treenode-selected\", ctx.nzSelectMode && ctx.isSelected)(\"ant-select-tree-treenode-loading\", ctx.nzSelectMode && ctx.isLoading)(\"ant-tree-treenode\", !ctx.nzSelectMode)(\"ant-tree-treenode-disabled\", !ctx.nzSelectMode && ctx.isDisabled)(\"ant-tree-treenode-switcher-open\", !ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-tree-treenode-switcher-close\", !ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-tree-treenode-checkbox-checked\", !ctx.nzSelectMode && ctx.isChecked)(\"ant-tree-treenode-checkbox-indeterminate\", !ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-tree-treenode-selected\", !ctx.nzSelectMode && ctx.isSelected)(\"ant-tree-treenode-loading\", !ctx.nzSelectMode && ctx.isLoading)(\"dragging\", ctx.draggingKey === ctx.nzTreeNode.key);\n      }\n    },\n    inputs: {\n      icon: \"icon\",\n      title: \"title\",\n      isLoading: [2, \"isLoading\", \"isLoading\", booleanAttribute],\n      isSelected: [2, \"isSelected\", \"isSelected\", booleanAttribute],\n      isDisabled: [2, \"isDisabled\", \"isDisabled\", booleanAttribute],\n      isMatched: [2, \"isMatched\", \"isMatched\", booleanAttribute],\n      isExpanded: [2, \"isExpanded\", \"isExpanded\", booleanAttribute],\n      isLeaf: [2, \"isLeaf\", \"isLeaf\", booleanAttribute],\n      isChecked: [2, \"isChecked\", \"isChecked\", booleanAttribute],\n      isHalfChecked: [2, \"isHalfChecked\", \"isHalfChecked\", booleanAttribute],\n      isDisableCheckbox: [2, \"isDisableCheckbox\", \"isDisableCheckbox\", booleanAttribute],\n      isSelectable: [2, \"isSelectable\", \"isSelectable\", booleanAttribute],\n      canHide: [2, \"canHide\", \"canHide\", booleanAttribute],\n      isStart: \"isStart\",\n      isEnd: \"isEnd\",\n      nzTreeNode: \"nzTreeNode\",\n      nzShowLine: [2, \"nzShowLine\", \"nzShowLine\", booleanAttribute],\n      nzShowExpand: [2, \"nzShowExpand\", \"nzShowExpand\", booleanAttribute],\n      nzCheckable: [2, \"nzCheckable\", \"nzCheckable\", booleanAttribute],\n      nzAsyncData: [2, \"nzAsyncData\", \"nzAsyncData\", booleanAttribute],\n      nzHideUnMatched: [2, \"nzHideUnMatched\", \"nzHideUnMatched\", booleanAttribute],\n      nzNoAnimation: [2, \"nzNoAnimation\", \"nzNoAnimation\", booleanAttribute],\n      nzSelectMode: [2, \"nzSelectMode\", \"nzSelectMode\", booleanAttribute],\n      nzShowIcon: [2, \"nzShowIcon\", \"nzShowIcon\", booleanAttribute],\n      nzExpandedIcon: \"nzExpandedIcon\",\n      nzTreeTemplate: \"nzTreeTemplate\",\n      nzBeforeDrop: \"nzBeforeDrop\",\n      nzSearchValue: \"nzSearchValue\",\n      nzDraggable: [2, \"nzDraggable\", \"nzDraggable\", booleanAttribute]\n    },\n    outputs: {\n      nzClick: \"nzClick\",\n      nzDblClick: \"nzDblClick\",\n      nzContextMenu: \"nzContextMenu\",\n      nzCheckboxChange: \"nzCheckboxChange\",\n      nzExpandChange: \"nzExpandChange\",\n      nzOnDragStart: \"nzOnDragStart\",\n      nzOnDragEnter: \"nzOnDragEnter\",\n      nzOnDragOver: \"nzOnDragOver\",\n      nzOnDragLeave: \"nzOnDragLeave\",\n      nzOnDrop: \"nzOnDrop\",\n      nzOnDragEnd: \"nzOnDragEnd\"\n    },\n    exportAs: [\"nzTreeBuiltinNode\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c0,\n    decls: 4,\n    vars: 22,\n    consts: [[3, \"nzTreeLevel\", \"nzSelectMode\", \"nzIsStart\", \"nzIsEnd\"], [3, \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzSelectMode\", \"context\", \"isLeaf\", \"isExpanded\", \"isLoading\"], [\"builtin\", \"\", 3, \"nzSelectMode\", \"isChecked\", \"isHalfChecked\", \"isDisabled\", \"isDisableCheckbox\"], [3, \"dblclick\", \"click\", \"contextmenu\", \"icon\", \"title\", \"isLoading\", \"isSelected\", \"isDisabled\", \"isMatched\", \"isExpanded\", \"isLeaf\", \"searchValue\", \"treeTemplate\", \"draggable\", \"showIcon\", \"selectMode\", \"context\", \"showIndicator\", \"dragPosition\"], [3, \"click\", \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzSelectMode\", \"context\", \"isLeaf\", \"isExpanded\", \"isLoading\"], [\"builtin\", \"\", 3, \"click\", \"nzSelectMode\", \"isChecked\", \"isHalfChecked\", \"isDisabled\", \"isDisableCheckbox\"]],\n    template: function NzTreeNodeBuiltinComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"nz-tree-indent\", 0);\n        i0.ɵɵconditionalCreate(1, NzTreeNodeBuiltinComponent_Conditional_1_Template, 1, 8, \"nz-tree-node-switcher\", 1);\n        i0.ɵɵconditionalCreate(2, NzTreeNodeBuiltinComponent_Conditional_2_Template, 1, 5, \"nz-tree-node-checkbox\", 2);\n        i0.ɵɵelementStart(3, \"nz-tree-node-title\", 3);\n        i0.ɵɵlistener(\"dblclick\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_dblclick_3_listener($event) {\n          return ctx.dblClick($event);\n        })(\"click\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_click_3_listener($event) {\n          return ctx.clickSelect($event);\n        })(\"contextmenu\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_contextmenu_3_listener($event) {\n          return ctx.contextMenu($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"nzTreeLevel\", ctx.nzTreeNode.level)(\"nzSelectMode\", ctx.nzSelectMode)(\"nzIsStart\", ctx.isStart)(\"nzIsEnd\", ctx.isEnd);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.nzShowExpand ? 1 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.nzCheckable ? 2 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"icon\", ctx.icon)(\"title\", ctx.title)(\"isLoading\", ctx.isLoading)(\"isSelected\", ctx.isSelected)(\"isDisabled\", ctx.isDisabled)(\"isMatched\", ctx.isMatched)(\"isExpanded\", ctx.isExpanded)(\"isLeaf\", ctx.isLeaf)(\"searchValue\", ctx.nzSearchValue)(\"treeTemplate\", ctx.nzTreeTemplate)(\"draggable\", ctx.nzDraggable)(\"showIcon\", ctx.nzShowIcon)(\"selectMode\", ctx.nzSelectMode)(\"context\", ctx.nzTreeNode)(\"showIndicator\", ctx.showIndicator)(\"dragPosition\", ctx.dragPos);\n      }\n    },\n    dependencies: [NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeNodeBuiltinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-node[builtin]',\n      exportAs: 'nzTreeBuiltinNode',\n      template: `\n    <nz-tree-indent\n      [nzTreeLevel]=\"nzTreeNode.level\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [nzIsStart]=\"isStart\"\n      [nzIsEnd]=\"isEnd\"\n    ></nz-tree-indent>\n    @if (nzShowExpand) {\n      <nz-tree-node-switcher\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [context]=\"nzTreeNode\"\n        [isLeaf]=\"isLeaf\"\n        [isExpanded]=\"isExpanded\"\n        [isLoading]=\"isLoading\"\n        (click)=\"clickExpand($event)\"\n      ></nz-tree-node-switcher>\n    }\n    @if (nzCheckable) {\n      <nz-tree-node-checkbox\n        builtin\n        (click)=\"clickCheckbox($event)\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [isChecked]=\"isChecked\"\n        [isHalfChecked]=\"isHalfChecked\"\n        [isDisabled]=\"isDisabled\"\n        [isDisableCheckbox]=\"isDisableCheckbox\"\n      ></nz-tree-node-checkbox>\n    }\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [showIndicator]=\"showIndicator\"\n      [dragPosition]=\"dragPos\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.ant-select-tree-treenode]': `nzSelectMode`,\n        '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n        '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n        '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n        '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n        '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n        '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n        '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n        '[class.ant-tree-treenode]': `!nzSelectMode`,\n        '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n        '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n        '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n        '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n        '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n        '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n        '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n        '[class.dragging]': `draggingKey === nzTreeNode.key`,\n        '[style.display]': 'displayStyle'\n      },\n      imports: [NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent]\n    }]\n  }], () => [], {\n    icon: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isSelected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isMatched: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isExpanded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isLeaf: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isChecked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isHalfChecked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isDisableCheckbox: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isSelectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    canHide: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isStart: [{\n      type: Input\n    }],\n    isEnd: [{\n      type: Input\n    }],\n    nzTreeNode: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzShowExpand: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzCheckable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzAsyncData: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzHideUnMatched: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzNoAnimation: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzSelectMode: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzShowIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzBeforeDrop: [{\n      type: Input\n    }],\n    nzSearchValue: [{\n      type: Input\n    }],\n    nzDraggable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzClick: [{\n      type: Output\n    }],\n    nzDblClick: [{\n      type: Output\n    }],\n    nzContextMenu: [{\n      type: Output\n    }],\n    nzCheckboxChange: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnDragStart: [{\n      type: Output\n    }],\n    nzOnDragEnter: [{\n      type: Output\n    }],\n    nzOnDragOver: [{\n      type: Output\n    }],\n    nzOnDragLeave: [{\n      type: Output\n    }],\n    nzOnDrop: [{\n      type: Output\n    }],\n    nzOnDragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeService extends NzTreeBaseService {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵNzTreeService_BaseFactory;\n    return function NzTreeService_Factory(__ngFactoryType__) {\n      return (ɵNzTreeService_BaseFactory || (ɵNzTreeService_BaseFactory = i0.ɵɵgetInheritedFactory(NzTreeService)))(__ngFactoryType__ || NzTreeService);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NzTreeService,\n    factory: NzTreeService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeService, [{\n    type: Injectable\n  }], null, null);\n})();\nfunction NzTreeServiceFactory() {\n  const higherOrderService = inject(NzTreeHigherOrderServiceToken, {\n    skipSelf: true,\n    optional: true\n  });\n  const treeService = inject(NzTreeService);\n  return higherOrderService ?? treeService;\n}\nconst NZ_CONFIG_MODULE_NAME = 'tree';\nlet NzTreeComponent = (() => {\n  let _classSuper = NzTreeBase;\n  let _nzShowIcon_decorators;\n  let _nzShowIcon_initializers = [];\n  let _nzShowIcon_extraInitializers = [];\n  let _nzHideUnMatched_decorators;\n  let _nzHideUnMatched_initializers = [];\n  let _nzHideUnMatched_extraInitializers = [];\n  let _nzBlockNode_decorators;\n  let _nzBlockNode_initializers = [];\n  let _nzBlockNode_extraInitializers = [];\n  return class NzTreeComponent extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      _nzShowIcon_decorators = [WithConfig()];\n      _nzHideUnMatched_decorators = [WithConfig()];\n      _nzBlockNode_decorators = [WithConfig()];\n      __esDecorate(null, null, _nzShowIcon_decorators, {\n        kind: \"field\",\n        name: \"nzShowIcon\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzShowIcon\" in obj,\n          get: obj => obj.nzShowIcon,\n          set: (obj, value) => {\n            obj.nzShowIcon = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzShowIcon_initializers, _nzShowIcon_extraInitializers);\n      __esDecorate(null, null, _nzHideUnMatched_decorators, {\n        kind: \"field\",\n        name: \"nzHideUnMatched\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzHideUnMatched\" in obj,\n          get: obj => obj.nzHideUnMatched,\n          set: (obj, value) => {\n            obj.nzHideUnMatched = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzHideUnMatched_initializers, _nzHideUnMatched_extraInitializers);\n      __esDecorate(null, null, _nzBlockNode_decorators, {\n        kind: \"field\",\n        name: \"nzBlockNode\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzBlockNode\" in obj,\n          get: obj => obj.nzBlockNode,\n          set: (obj, value) => {\n            obj.nzBlockNode = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzBlockNode_initializers, _nzBlockNode_extraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    _nzModuleName = NZ_CONFIG_MODULE_NAME;\n    noAnimation = inject(NzNoAnimationDirective, {\n      host: true,\n      optional: true\n    });\n    nzConfigService = inject(NzConfigService);\n    cdr = inject(ChangeDetectorRef);\n    directionality = inject(Directionality);\n    destroyRef = inject(DestroyRef);\n    nzShowIcon = __runInitializers(this, _nzShowIcon_initializers, false);\n    nzHideUnMatched = (__runInitializers(this, _nzShowIcon_extraInitializers), __runInitializers(this, _nzHideUnMatched_initializers, false));\n    nzBlockNode = (__runInitializers(this, _nzHideUnMatched_extraInitializers), __runInitializers(this, _nzBlockNode_initializers, false));\n    nzExpandAll = (__runInitializers(this, _nzBlockNode_extraInitializers), false);\n    nzSelectMode = false;\n    nzCheckStrictly = false;\n    nzShowExpand = true;\n    nzShowLine = false;\n    nzCheckable = false;\n    nzAsyncData = false;\n    nzDraggable = false;\n    nzMultiple = false;\n    nzExpandedIcon;\n    nzVirtualItemSize = 28;\n    nzVirtualMaxBufferPx = 500;\n    nzVirtualMinBufferPx = 28;\n    nzVirtualHeight = null;\n    nzTreeTemplate;\n    nzBeforeDrop;\n    nzData = [];\n    nzExpandedKeys = [];\n    nzSelectedKeys = [];\n    nzCheckedKeys = [];\n    nzSearchValue = '';\n    nzSearchFunc;\n    nzTreeTemplateChild;\n    cdkVirtualScrollViewport;\n    nzFlattenNodes = [];\n    beforeInit = true;\n    dir = 'ltr';\n    nzExpandedKeysChange = new EventEmitter();\n    nzSelectedKeysChange = new EventEmitter();\n    nzCheckedKeysChange = new EventEmitter();\n    nzSearchValueChange = new EventEmitter();\n    nzClick = new EventEmitter();\n    nzDblClick = new EventEmitter();\n    nzContextMenu = new EventEmitter();\n    nzCheckboxChange = new EventEmitter();\n    nzExpandChange = new EventEmitter();\n    nzOnDragStart = new EventEmitter();\n    nzOnDragEnter = new EventEmitter();\n    nzOnDragOver = new EventEmitter();\n    nzOnDragLeave = new EventEmitter();\n    nzOnDrop = new EventEmitter();\n    nzOnDragEnd = new EventEmitter();\n    HIDDEN_STYLE = {\n      width: 0,\n      height: 0,\n      display: 'flex',\n      overflow: 'hidden',\n      opacity: 0,\n      border: 0,\n      padding: 0,\n      margin: 0\n    };\n    HIDDEN_NODE_STYLE = {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden'\n    };\n    onChange = () => null;\n    onTouched = () => null;\n    writeValue(value) {\n      this.handleNzData(value);\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Render all properties of nzTree\n     *\n     * @param changes all changes from @Input\n     */\n    renderTreeProperties(changes) {\n      let useDefaultExpandedKeys = false;\n      let expandAll = false;\n      const {\n        nzData,\n        nzExpandedKeys,\n        nzSelectedKeys,\n        nzCheckedKeys,\n        nzCheckStrictly,\n        nzExpandAll,\n        nzMultiple,\n        nzSearchValue\n      } = changes;\n      if (nzExpandAll) {\n        useDefaultExpandedKeys = true;\n        expandAll = this.nzExpandAll;\n      }\n      if (nzMultiple) {\n        this.nzTreeService.isMultiple = this.nzMultiple;\n      }\n      if (nzCheckStrictly) {\n        this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n      }\n      if (nzData) {\n        this.handleNzData(this.nzData);\n      }\n      if (nzCheckedKeys) {\n        this.handleCheckedKeys(this.nzCheckedKeys);\n      }\n      if (nzCheckStrictly) {\n        this.handleCheckedKeys(null);\n      }\n      if (nzExpandedKeys || nzExpandAll) {\n        useDefaultExpandedKeys = true;\n        this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n      }\n      if (nzSelectedKeys) {\n        this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n      }\n      if (nzSearchValue) {\n        if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n          useDefaultExpandedKeys = false;\n          this.handleSearchValue(nzSearchValue.currentValue, this.nzSearchFunc);\n          this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n        }\n      }\n      // flatten data\n      const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n      const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n      this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n    }\n    trackByFlattenNode(_, node) {\n      return node.key;\n    }\n    // Deal with properties\n    /**\n     * nzData\n     *\n     * @param value\n     */\n    handleNzData(value) {\n      if (Array.isArray(value)) {\n        const data = this.coerceTreeNodes(value);\n        this.nzTreeService.initTree(data);\n      }\n    }\n    handleFlattenNodes(data, expandKeys = []) {\n      this.nzTreeService.flattenTreeData(data, expandKeys);\n    }\n    handleCheckedKeys(keys) {\n      this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n    }\n    handleExpandedKeys(keys = []) {\n      this.nzTreeService.conductExpandedKeys(keys);\n    }\n    handleSelectedKeys(keys, isMulti) {\n      this.nzTreeService.conductSelectedKeys(keys, isMulti);\n    }\n    handleSearchValue(value, searchFunc) {\n      const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n      const checkIfMatched = node => {\n        if (searchFunc) {\n          return searchFunc(node.origin);\n        }\n        return !!value && node.title.toLowerCase().includes(value.toLowerCase());\n      };\n      dataList.forEach(v => {\n        v.isMatched = checkIfMatched(v);\n        v.canHide = !v.isMatched;\n        if (!v.isMatched) {\n          v.setExpanded(false);\n          this.nzTreeService.setExpandedNodeList(v);\n        } else {\n          // expand\n          this.nzTreeService.expandNodeAllParentBySearch(v);\n        }\n        this.nzTreeService.setMatchedNodeList(v);\n      });\n    }\n    /**\n     * Handle emit event\n     *\n     * @param event\n     * handle each event\n     */\n    eventTriggerChanged(event) {\n      const node = event.node;\n      switch (event.eventName) {\n        case 'expand':\n          this.renderTree();\n          this.nzExpandChange.emit(event);\n          break;\n        case 'click':\n          this.nzClick.emit(event);\n          break;\n        case 'dblclick':\n          this.nzDblClick.emit(event);\n          break;\n        case 'contextmenu':\n          this.nzContextMenu.emit(event);\n          break;\n        case 'check':\n          {\n            // Render checked state with nodes' property `isChecked`\n            this.nzTreeService.setCheckedNodeList(node);\n            if (!this.nzCheckStrictly) {\n              this.nzTreeService.conduct(node);\n            }\n            // Cause check method will rerender list, so we need recover it and next the new event to user\n            const eventNext = this.nzTreeService.formatEvent('check', node, event.event);\n            this.nzCheckboxChange.emit(eventNext);\n            const checkedKeys = this.nzTreeService.getCheckedNodeKeys();\n            this.nzCheckedKeysChange.emit(checkedKeys);\n            break;\n          }\n        case 'dragstart':\n          // if node is expanded\n          if (node.isExpanded) {\n            node.setExpanded(!node.isExpanded);\n            this.renderTree();\n          }\n          this.nzOnDragStart.emit(event);\n          break;\n        case 'dragenter':\n          {\n            const selectedNode = this.nzTreeService.getSelectedNode();\n            if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n              node.setExpanded(true);\n              this.renderTree();\n            }\n            this.nzOnDragEnter.emit(event);\n            break;\n          }\n        case 'dragover':\n          this.nzOnDragOver.emit(event);\n          break;\n        case 'dragleave':\n          this.nzOnDragLeave.emit(event);\n          break;\n        case 'dragend':\n          this.nzOnDragEnd.emit(event);\n          break;\n        case 'drop':\n          this.renderTree();\n          this.nzOnDrop.emit(event);\n          break;\n      }\n    }\n    /**\n     * Click expand icon\n     */\n    renderTree() {\n      this.handleFlattenNodes(this.nzTreeService.rootNodes, this.getExpandedNodeList().map(v => v.key));\n      this.cdr.markForCheck();\n    }\n    constructor() {\n      super(inject(NzTreeBaseService));\n    }\n    ngOnInit() {\n      this.nzTreeService.flattenNodes$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(data => {\n        this.nzFlattenNodes = !!this.nzVirtualHeight && this.nzHideUnMatched && this.nzSearchValue?.length > 0 ? data.filter(d => !d.canHide) : data;\n        this.cdr.markForCheck();\n      });\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n    }\n    ngOnChanges(changes) {\n      this.renderTreeProperties(changes);\n    }\n    ngAfterViewInit() {\n      this.beforeInit = false;\n    }\n    static ɵfac = function NzTreeComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzTreeComponent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTreeComponent,\n      selectors: [[\"nz-tree\"]],\n      contentQueries: function NzTreeComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c2, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n        }\n      },\n      viewQuery: function NzTreeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5, CdkVirtualScrollViewport);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n        }\n      },\n      hostVars: 20,\n      hostBindings: function NzTreeComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-select-tree\", ctx.nzSelectMode)(\"ant-select-tree-show-line\", ctx.nzSelectMode && ctx.nzShowLine)(\"ant-select-tree-icon-hide\", ctx.nzSelectMode && !ctx.nzShowIcon)(\"ant-select-tree-block-node\", ctx.nzSelectMode && ctx.nzBlockNode)(\"ant-tree\", !ctx.nzSelectMode)(\"ant-tree-rtl\", ctx.dir === \"rtl\")(\"ant-tree-show-line\", !ctx.nzSelectMode && ctx.nzShowLine)(\"ant-tree-icon-hide\", !ctx.nzSelectMode && !ctx.nzShowIcon)(\"ant-tree-block-node\", !ctx.nzSelectMode && ctx.nzBlockNode)(\"draggable-tree\", ctx.nzDraggable);\n        }\n      },\n      inputs: {\n        nzShowIcon: [2, \"nzShowIcon\", \"nzShowIcon\", booleanAttribute],\n        nzHideUnMatched: [2, \"nzHideUnMatched\", \"nzHideUnMatched\", booleanAttribute],\n        nzBlockNode: [2, \"nzBlockNode\", \"nzBlockNode\", booleanAttribute],\n        nzExpandAll: [2, \"nzExpandAll\", \"nzExpandAll\", booleanAttribute],\n        nzSelectMode: [2, \"nzSelectMode\", \"nzSelectMode\", booleanAttribute],\n        nzCheckStrictly: [2, \"nzCheckStrictly\", \"nzCheckStrictly\", booleanAttribute],\n        nzShowExpand: [2, \"nzShowExpand\", \"nzShowExpand\", booleanAttribute],\n        nzShowLine: [2, \"nzShowLine\", \"nzShowLine\", booleanAttribute],\n        nzCheckable: [2, \"nzCheckable\", \"nzCheckable\", booleanAttribute],\n        nzAsyncData: [2, \"nzAsyncData\", \"nzAsyncData\", booleanAttribute],\n        nzDraggable: [2, \"nzDraggable\", \"nzDraggable\", booleanAttribute],\n        nzMultiple: [2, \"nzMultiple\", \"nzMultiple\", booleanAttribute],\n        nzExpandedIcon: \"nzExpandedIcon\",\n        nzVirtualItemSize: \"nzVirtualItemSize\",\n        nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n        nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n        nzVirtualHeight: \"nzVirtualHeight\",\n        nzTreeTemplate: \"nzTreeTemplate\",\n        nzBeforeDrop: \"nzBeforeDrop\",\n        nzData: \"nzData\",\n        nzExpandedKeys: \"nzExpandedKeys\",\n        nzSelectedKeys: \"nzSelectedKeys\",\n        nzCheckedKeys: \"nzCheckedKeys\",\n        nzSearchValue: \"nzSearchValue\",\n        nzSearchFunc: \"nzSearchFunc\"\n      },\n      outputs: {\n        nzExpandedKeysChange: \"nzExpandedKeysChange\",\n        nzSelectedKeysChange: \"nzSelectedKeysChange\",\n        nzCheckedKeysChange: \"nzCheckedKeysChange\",\n        nzSearchValueChange: \"nzSearchValueChange\",\n        nzClick: \"nzClick\",\n        nzDblClick: \"nzDblClick\",\n        nzContextMenu: \"nzContextMenu\",\n        nzCheckboxChange: \"nzCheckboxChange\",\n        nzExpandChange: \"nzExpandChange\",\n        nzOnDragStart: \"nzOnDragStart\",\n        nzOnDragEnter: \"nzOnDragEnter\",\n        nzOnDragOver: \"nzOnDragOver\",\n        nzOnDragLeave: \"nzOnDragLeave\",\n        nzOnDrop: \"nzOnDrop\",\n        nzOnDragEnd: \"nzOnDragEnd\"\n      },\n      exportAs: [\"nzTree\"],\n      features: [i0.ɵɵProvidersFeature([NzTreeService, {\n        provide: NzTreeBaseService,\n        useFactory: NzTreeServiceFactory\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzTreeComponent),\n        multi: true\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n      decls: 10,\n      vars: 7,\n      consts: [[\"nodeTemplate\", \"\"], [1, \"ant-tree-treenode\"], [1, \"ant-tree-indent\"], [1, \"ant-tree-indent-unit\"], [1, \"ant-tree-list\", 2, \"position\", \"relative\"], [3, \"ant-select-tree-list-holder-inner\", \"ant-tree-list-holder-inner\", \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"height\"], [3, \"ant-select-tree-list-holder-inner\", \"ant-tree-list-holder-inner\", \"nzNoAnimation\"], [3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"nzNoAnimation\"], [\"builtin\", \"\", 3, \"nzExpandChange\", \"nzClick\", \"nzDblClick\", \"nzContextMenu\", \"nzCheckboxChange\", \"nzOnDragStart\", \"nzOnDragEnter\", \"nzOnDragOver\", \"nzOnDragLeave\", \"nzOnDragEnd\", \"nzOnDrop\", \"icon\", \"title\", \"isLoading\", \"isSelected\", \"isDisabled\", \"isMatched\", \"isExpanded\", \"isLeaf\", \"isStart\", \"isEnd\", \"isChecked\", \"isHalfChecked\", \"isDisableCheckbox\", \"isSelectable\", \"canHide\", \"nzTreeNode\", \"nzSelectMode\", \"nzShowLine\", \"nzExpandedIcon\", \"nzDraggable\", \"nzCheckable\", \"nzShowExpand\", \"nzAsyncData\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzBeforeDrop\", \"nzShowIcon\", \"nzTreeTemplate\"]],\n      template: function NzTreeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵelement(1, \"input\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n          i0.ɵɵelement(4, \"div\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵconditionalCreate(6, NzTreeComponent_Conditional_6_Template, 2, 11, \"cdk-virtual-scroll-viewport\", 5)(7, NzTreeComponent_Conditional_7_Template, 3, 7, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, NzTreeComponent_ng_template_8_Template, 1, 28, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵstyleMap(ctx.HIDDEN_STYLE);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleMap(ctx.HIDDEN_NODE_STYLE);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"ant-select-tree-list\", ctx.nzSelectMode);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.nzVirtualHeight ? 6 : 7);\n        }\n      },\n      dependencies: [CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, NgTemplateOutlet, NzNoAnimationDirective, NzTreeNodeBuiltinComponent],\n      encapsulation: 2,\n      data: {\n        animation: [treeCollapseMotion]\n      },\n      changeDetection: 0\n    });\n  };\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree',\n      exportAs: 'nzTree',\n      animations: [treeCollapseMotion],\n      template: `\n    <div>\n      <input [style]=\"HIDDEN_STYLE\" />\n    </div>\n    <div class=\"ant-tree-treenode\" [style]=\"HIDDEN_NODE_STYLE\">\n      <div class=\"ant-tree-indent\">\n        <div class=\"ant-tree-indent-unit\"></div>\n      </div>\n    </div>\n    <div class=\"ant-tree-list\" [class.ant-select-tree-list]=\"nzSelectMode\" style=\"position: relative\">\n      @if (nzVirtualHeight) {\n        <cdk-virtual-scroll-viewport\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template\n              [ngTemplateOutlet]=\"nodeTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: node }\"\n            ></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n      } @else {\n        <div\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [@.disabled]=\"beforeInit || !!noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          @for (node of nzFlattenNodes; track trackByFlattenNode($index, node)) {\n            <ng-template\n              [ngTemplateOutlet]=\"nodeTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: node }\"\n            ></ng-template>\n          }\n        </div>\n      }\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        builtin\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckboxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      ></nz-tree-node>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [NzTreeService, {\n        provide: NzTreeBaseService,\n        useFactory: NzTreeServiceFactory\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzTreeComponent),\n        multi: true\n      }],\n      host: {\n        '[class.ant-select-tree]': `nzSelectMode`,\n        '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n        '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n        '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n        '[class.ant-tree]': `!nzSelectMode`,\n        '[class.ant-tree-rtl]': `dir === 'rtl'`,\n        '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n        '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n        '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n        '[class.draggable-tree]': `nzDraggable`\n      },\n      imports: [CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, NgTemplateOutlet, NzNoAnimationDirective, NzTreeNodeBuiltinComponent]\n    }]\n  }], () => [], {\n    nzShowIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzHideUnMatched: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzBlockNode: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzExpandAll: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzSelectMode: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzCheckStrictly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzShowExpand: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzShowLine: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzCheckable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzAsyncData: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzDraggable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzMultiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualHeight: [{\n      type: Input\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzBeforeDrop: [{\n      type: Input\n    }],\n    nzData: [{\n      type: Input\n    }],\n    nzExpandedKeys: [{\n      type: Input\n    }],\n    nzSelectedKeys: [{\n      type: Input\n    }],\n    nzCheckedKeys: [{\n      type: Input\n    }],\n    nzSearchValue: [{\n      type: Input\n    }],\n    nzSearchFunc: [{\n      type: Input\n    }],\n    nzTreeTemplateChild: [{\n      type: ContentChild,\n      args: ['nzTreeTemplate', {\n        static: true\n      }]\n    }],\n    cdkVirtualScrollViewport: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport, {\n        read: CdkVirtualScrollViewport\n      }]\n    }],\n    nzExpandedKeysChange: [{\n      type: Output\n    }],\n    nzSelectedKeysChange: [{\n      type: Output\n    }],\n    nzCheckedKeysChange: [{\n      type: Output\n    }],\n    nzSearchValueChange: [{\n      type: Output\n    }],\n    nzClick: [{\n      type: Output\n    }],\n    nzDblClick: [{\n      type: Output\n    }],\n    nzContextMenu: [{\n      type: Output\n    }],\n    nzCheckboxChange: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnDragStart: [{\n      type: Output\n    }],\n    nzOnDragEnter: [{\n      type: Output\n    }],\n    nzOnDragOver: [{\n      type: Output\n    }],\n    nzOnDragLeave: [{\n      type: Output\n    }],\n    nzOnDrop: [{\n      type: Output\n    }],\n    nzOnDragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeModule {\n  static ɵfac = function NzTreeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzTreeModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzTreeModule,\n    imports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent, NzTreeDropIndicatorComponent],\n    exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeNodeSwitcherComponent, NzTreeNodeTitleComponent]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent, NzTreeDropIndicatorComponent],\n      exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeComponent, NzTreeIndentComponent, NzTreeModule, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeBuiltinComponent, NzTreeNodeSwitcherComponent, NzTreeNodeTitleComponent, NzTreeService, NzTreeServiceFactory };\n"],
  "mappings": "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",
  "names": []
}
