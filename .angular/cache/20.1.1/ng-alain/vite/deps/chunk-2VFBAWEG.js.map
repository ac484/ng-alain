{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-spin.mjs"],
  "sourcesContent": ["import { __esDecorate, __runInitializers } from 'tslib';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, DestroyRef, signal, booleanAttribute, numberAttribute, Input, ViewEncapsulation, Component, NgModule } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { startWith, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { WithConfig, onConfigChangeEventForComponent } from 'ng-zorro-antd/core/config';\nconst _c0 = [\"*\"];\nfunction NzSpinComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵelement(1, \"i\", 3)(2, \"i\", 3)(3, \"i\", 3)(4, \"i\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzSpinComponent_Conditional_2_ng_template_2_Template(rf, ctx) {}\nfunction NzSpinComponent_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.nzTip);\n  }\n}\nfunction NzSpinComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4);\n    i0.ɵɵtemplate(2, NzSpinComponent_Conditional_2_ng_template_2_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵconditionalCreate(3, NzSpinComponent_Conditional_2_Conditional_3_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const defaultTemplate_r2 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"ant-spin-rtl\", ctx_r0.dir === \"rtl\")(\"ant-spin-lg\", ctx_r0.nzSize === \"large\")(\"ant-spin-sm\", ctx_r0.nzSize === \"small\")(\"ant-spin-show-text\", ctx_r0.nzTip);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzIndicator || defaultTemplate_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.nzTip ? 3 : -1);\n  }\n}\nfunction NzSpinComponent_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-spin-blur\", ctx_r0.isLoading());\n  }\n}\nconst NZ_CONFIG_MODULE_NAME = 'spin';\nlet NzSpinComponent = (() => {\n  let _nzIndicator_decorators;\n  let _nzIndicator_initializers = [];\n  let _nzIndicator_extraInitializers = [];\n  return class NzSpinComponent {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      _nzIndicator_decorators = [WithConfig()];\n      __esDecorate(null, null, _nzIndicator_decorators, {\n        kind: \"field\",\n        name: \"nzIndicator\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"nzIndicator\" in obj,\n          get: obj => obj.nzIndicator,\n          set: (obj, value) => {\n            obj.nzIndicator = value;\n          }\n        },\n        metadata: _metadata\n      }, _nzIndicator_initializers, _nzIndicator_extraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    _nzModuleName = NZ_CONFIG_MODULE_NAME;\n    cdr = inject(ChangeDetectorRef);\n    directionality = inject(Directionality);\n    destroyRef = inject(DestroyRef);\n    nzIndicator = __runInitializers(this, _nzIndicator_initializers, null);\n    nzSize = (__runInitializers(this, _nzIndicator_extraInitializers), 'default');\n    nzTip = null;\n    nzDelay = 0;\n    nzSimple = false;\n    nzSpinning = true;\n    spinning$ = new BehaviorSubject(this.nzSpinning);\n    delay$ = new ReplaySubject(1);\n    isLoading = signal(false, ...(ngDevMode ? [{\n      debugName: \"isLoading\"\n    }] : []));\n    dir = 'ltr';\n    constructor() {\n      onConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME, () => this.cdr.markForCheck());\n    }\n    ngOnInit() {\n      this.delay$.pipe(startWith(this.nzDelay), distinctUntilChanged(), switchMap(delay =>\n      // This construct is used to reduce RxJS dependencies.\n      // It previously used `debounce(() => timer())`, but consumers may not\n      // use these RxJS functions at all, causing them to still be bundled\n      // into the main bundle unnecessarily.\n      this.spinning$.pipe(switchMap(spinning => {\n        if (delay === 0 || !spinning) {\n          return of(spinning);\n        }\n        return new Observable(subscriber => {\n          const timeoutId = setTimeout(() => subscriber.next(spinning), delay);\n          return () => clearTimeout(timeoutId);\n        });\n      }))), takeUntilDestroyed(this.destroyRef)).subscribe(isLoading => {\n        this.isLoading.set(isLoading);\n      });\n      this.directionality.change?.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n      const {\n        nzSpinning,\n        nzDelay\n      } = changes;\n      if (nzSpinning) {\n        this.spinning$.next(this.nzSpinning);\n      }\n      if (nzDelay) {\n        this.delay$.next(this.nzDelay);\n      }\n    }\n    static ɵfac = function NzSpinComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NzSpinComponent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSpinComponent,\n      selectors: [[\"nz-spin\"]],\n      hostVars: 2,\n      hostBindings: function NzSpinComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-spin-nested-loading\", !ctx.nzSimple);\n        }\n      },\n      inputs: {\n        nzIndicator: \"nzIndicator\",\n        nzSize: \"nzSize\",\n        nzTip: \"nzTip\",\n        nzDelay: [2, \"nzDelay\", \"nzDelay\", numberAttribute],\n        nzSimple: [2, \"nzSimple\", \"nzSimple\", booleanAttribute],\n        nzSpinning: [2, \"nzSpinning\", \"nzSpinning\", booleanAttribute]\n      },\n      exportAs: [\"nzSpin\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 4,\n      vars: 2,\n      consts: [[\"defaultTemplate\", \"\"], [1, \"ant-spin-container\", 3, \"ant-spin-blur\"], [1, \"ant-spin-dot\", \"ant-spin-dot-spin\"], [1, \"ant-spin-dot-item\"], [1, \"ant-spin\", \"ant-spin-spinning\"], [3, \"ngTemplateOutlet\"], [1, \"ant-spin-text\"], [1, \"ant-spin-container\"]],\n      template: function NzSpinComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzSpinComponent_ng_template_0_Template, 5, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵconditionalCreate(2, NzSpinComponent_Conditional_2_Template, 4, 10, \"div\");\n          i0.ɵɵconditionalCreate(3, NzSpinComponent_Conditional_3_Template, 2, 2, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.isLoading() ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(!ctx.nzSimple ? 3 : -1);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      encapsulation: 2\n    });\n  };\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-spin',\n      exportAs: 'nzSpin',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    @if (isLoading()) {\n      <div>\n        <div\n          class=\"ant-spin ant-spin-spinning\"\n          [class.ant-spin-rtl]=\"dir === 'rtl'\"\n          [class.ant-spin-lg]=\"nzSize === 'large'\"\n          [class.ant-spin-sm]=\"nzSize === 'small'\"\n          [class.ant-spin-show-text]=\"nzTip\"\n        >\n          <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n          @if (nzTip) {\n            <div class=\"ant-spin-text\">{{ nzTip }}</div>\n          }\n        </div>\n      </div>\n    }\n    @if (!nzSimple) {\n      <div class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading()\">\n        <ng-content></ng-content>\n      </div>\n    }\n  `,\n      host: {\n        '[class.ant-spin-nested-loading]': '!nzSimple'\n      },\n      imports: [NgTemplateOutlet]\n    }]\n  }], () => [], {\n    nzIndicator: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzTip: [{\n      type: Input\n    }],\n    nzDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    nzSimple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    nzSpinning: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpinModule {\n  static ɵfac = function NzSpinModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NzSpinModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzSpinModule,\n    imports: [NzSpinComponent],\n    exports: [NzSpinComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzSpinComponent],\n      exports: [NzSpinComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpinComponent, NzSpinModule };\n"],
  "mappings": "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",
  "names": []
}
