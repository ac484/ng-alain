{
  "version": 3,
  "sources": ["../../../../../../node_modules/@delon/abc/fesm2022/zip.mjs"],
  "sourcesContent": ["import { __decorate } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { saveAs } from 'file-saver';\nimport { AlainConfigService } from '@delon/util/config';\nimport { ZoneOutside } from '@delon/util/decorator';\nimport { LazyService } from '@delon/util/other';\nclass ZipService {\n  http = inject(HttpClient);\n  lazy = inject(LazyService);\n  ngZone = inject(NgZone);\n  cogSrv = inject(AlainConfigService);\n  cog;\n  constructor() {\n    this.cog = this.cogSrv.merge('zip', {\n      url: 'https://cdn.jsdelivr.net/npm/jszip@3/dist/jszip.min.js',\n      utils: []\n    });\n  }\n  init() {\n    return this.lazy.load([this.cog.url].concat(this.cog.utils));\n  }\n  check(zip) {\n    if (!zip) throw new Error('get instance via `ZipService.create()`');\n  }\n  /** 解压 */\n  read(fileOrUrl, options) {\n    return new Promise((resolve, reject) => {\n      const resolveCallback = data => {\n        this.ngZone.run(() => resolve(data));\n      };\n      this.init().then(() => {\n        // from url\n        if (typeof fileOrUrl === 'string') {\n          this.http.request('GET', fileOrUrl, {\n            responseType: 'arraybuffer'\n          }).subscribe({\n            next: res => {\n              JSZip.loadAsync(res, options).then(ret => resolveCallback(ret));\n            },\n            error: err => {\n              reject(err);\n            }\n          });\n          return;\n        }\n        // from file\n        const reader = new FileReader();\n        reader.onload = e => {\n          JSZip.loadAsync(e.target.result, options).then(ret => resolveCallback(ret));\n        };\n        reader.readAsBinaryString(fileOrUrl);\n      });\n    });\n  }\n  /** 创建 Zip 实例，用于创建压缩文件 */\n  create() {\n    return new Promise(resolve => {\n      this.init().then(() => {\n        const zipFile = new JSZip();\n        resolve(zipFile);\n      }).catch(() => resolve(null));\n    });\n  }\n  /**\n   * 下载URL资源并写入 zip\n   *\n   * @param zip Zip 实例\n   * @param path Zip 路径，例如： `text.txt`、`txt/hi.txt`\n   * @param url URL 地址\n   */\n  pushUrl(zip, path, url) {\n    this.check(zip);\n    return new Promise((resolve, reject) => {\n      this.http.request('GET', url, {\n        responseType: 'arraybuffer'\n      }).subscribe({\n        next: res => {\n          zip.file(path, res);\n          resolve();\n        },\n        error: error => {\n          reject({\n            url,\n            error\n          });\n        }\n      });\n    });\n  }\n  /**\n   * 保存Zip并执行打开保存对话框\n   *\n   * @param zip zip 对象，务必通过 `create()` 构建\n   * @param options 额外参数，\n   */\n  save(zip, options) {\n    this.check(zip);\n    const opt = {\n      filename: 'download.zip',\n      ...options\n    };\n    return new Promise((resolve, reject) => {\n      zip.generateAsync({\n        type: 'blob',\n        ...opt.options\n      }, opt.update).then(data => {\n        if (opt.callback) opt.callback(data);\n        saveAs(data, opt.filename);\n        resolve();\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n  static ɵfac = function ZipService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ZipService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ZipService,\n    factory: ZipService.ɵfac,\n    providedIn: 'root'\n  });\n}\n__decorate([ZoneOutside()], ZipService.prototype, \"read\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ZipService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], {\n    read: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ZipService };\n"],
  "mappings": "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",
  "names": []
}
